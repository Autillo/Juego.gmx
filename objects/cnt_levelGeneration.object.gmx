<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Select random layout and create level and players

//Generate a new seed for random numbers
randomize();

//Read a random level layout file and create the instances
file = file_text_open_read(working_directory + "\Levels\lvl" + string(irandom(LEVELS-1)+1) +".txt");
iden = 0;
for(j=0;j&lt;HEIGHT+2;j++){
    for(i=0; i&lt;WIDTH+2;i++){
        value = file_text_read_real(file);
        switch(value){
            case 1:
                instance_create((i)*CELL_WIDTH,(j+1)*CELL_HEIGHT,obj_bush);
                break;
            case 2:
                instance_create((i)*CELL_WIDTH,(j+1)*CELL_HEIGHT,obj_powerup);
                break;
            case 3:
                players[iden] = instance_create(32+(i)*CELL_WIDTH,32+(j+1)*CELL_HEIGHT,obj_player);
                players[iden].identifier = iden+1;
                iden++;
                break;
            case 4:
                instance_create((i)*CELL_WIDTH,(j+1)*CELL_HEIGHT,obj_wall);
                break;
            case 5:
                instance_create((i)*CELL_WIDTH,(j+1)*CELL_HEIGHT,obj_powerup_patty);
                break;
            case 6:
                instance_create((i)*CELL_WIDTH,(j+1)*CELL_HEIGHT,obj_door);
                break;
        }
    } 
}
file_text_close(file);

// 1 = Object Spawn   2 = PowerUp Spawn   3 = Player Spawn  4 = Wall

//Read ini file with controls and assign them
file = ini_open("controls.ini");
for(i=0; i&lt;4; i++){
    players[i].up = ini_read_real("player"+string(i+1), "up", 87);
    players[i].down = ini_read_real("player"+string(i+1), "down", 83);
    players[i].left = ini_read_real("player"+string(i+1), "left", 65);
    players[i].right = ini_read_real("player"+string(i+1), "right", 68);
    players[i].action = ini_read_real("player"+string(i+1), "action", 32);
}

//Change sprite for each player
with(obj_player){
    sprite_index = asset_get_index("spr_p"+string(identifier));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>

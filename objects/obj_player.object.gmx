<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
walkingSpeed = 5;
angle = 270;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement and Collisions
hspeed = walkingSpeed * (keyboard_check(right) - keyboard_check(left));
vspeed = walkingSpeed * (keyboard_check(down) - keyboard_check(up));

//Colisions
if (hspeed!=0 and !place_free(x+hspeed,y)){
    if hspeed &gt; 0 move_contact_solid(0,hspeed);
    if hspeed &lt; 0 move_contact_solid(180,-hspeed);
    hspeed = 0;
    
}
if (vspeed!=0 and !place_free(x,y+vspeed)){
    if vspeed &gt; 0 move_contact_solid(270,vspeed);
    if vspeed &lt; 0 move_contact_solid(90,-vspeed);
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation
if(vspeed == 0 and hspeed == 0){
    image_speed = 0;
    image_index = 0;
}
else{
    image_speed = 1;
    if(vspeed&gt;0){
        //sprite_index = asset_get_index("spr_p"+string(identifier)+"_down");
        angle = 270;
    }
    else if(vspeed&lt;0){
        //sprite_index = asset_get_index("spr_p"+string(identifier)+"_up");
        angle = 90;
    }
    else if(hspeed&gt;0){
        //sprite_index = asset_get_index("spr_p"+string(identifier)+"_right");
        angle = 0;
    }
    else if(hspeed&lt;0){
        //sprite_index = asset_get_index("spr_p"+string(identifier)+"_left");
        angle = 180;
    }
}
image_angle = angle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
